/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QLHH.GUI;

import QLHH.BUS.ChiTietPNBUS;
import QLHH.BUS.NhaCungCapBUS;
import QLHH.BUS.PhieuNhapBUS;
import QLHH.BUS.SanPhamBUS;
import QLHH.DTO.ChiTietPNDTO;
import QLHH.DTO.NhaCungCapDTO;
import QLHH.DTO.PhieuNhapDTO;
import QLHH.DTO.SanPhamDTO;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ACER
 */
public class PhieuNhap extends javax.swing.JFrame implements MouseListener{

    /**
     * Creates new form PhieuNhap
     */
    public PhieuNhap() throws Exception {
        this.setUndecorated(true);

        init();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(1005, 607);
        this.setTitle("QUẢN LÝ HÀNG HÓA SIÊU THỊ");
        pThongTin_ThongTin.setVisible(true);
        // các hàm xử lý sau khi vào
        
        // hiển thị các dữ liệu table
        actionButtondisplay();
        actionButtondisplayChiTiet();
        
        // cac su kien khac
        actionTFChiTiet();
        
        //chinh sua cac cbb
        nhapLuongNCC();

        // hiển thị rdbtn
        tfThongTin_MaNV.setText(Memory.maNV);
        
        tblThongTin.setAutoCreateRowSorter(true);
        tblThongTin2.setAutoCreateRowSorter(true);
    }

    
private Color Color_pnLeft, colorPanel_Center, colorText;
    private JLabel[] listLblLeft;
    private String[] strArr_Left;
    private PhieuNhapBUS list_PN;
    private ChiTietPNBUS list_ChiTietPN;
    private SanPhamBUS list_SanPham;
    private DefaultTableModel model, modelChiTiet;
    private double TongTien;
    private PhieuNhapDTO phieunhap;
    private CacHamQuanTrong cachamquangtrong;
    
    
    private String date1 = LocalDateTime.now().getDayOfMonth() + " " +
                LocalDateTime.now().getMonth() + " " +
                LocalDateTime.now().getYear();
    
    public void init() throws Exception {
        Color_pnLeft = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        
        cachamquangtrong = new CacHamQuanTrong();
        list_PN = new PhieuNhapBUS();
        list_ChiTietPN = new ChiTietPNBUS();
        list_SanPham = new SanPhamBUS();
        phieunhap = new PhieuNhapDTO();
        
        strArr_Left = new String[10];
        strArr_Left[0] = "hanghoa";
        strArr_Left[1] = "phieunhap";
        strArr_Left[2] = "hoadon";
        strArr_Left[3] = "thongke";
        strArr_Left[4] = "xuatexcel";
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnLeft = createPanel_LblLeft(strArr_Left);
        jPanel1 = new javax.swing.JPanel();
        pThongTin = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        pThongTin_ThongTin = new javax.swing.JPanel();
        lblThongTin_MaPN = new javax.swing.JLabel();
        lblThongTin_MaNCC = new javax.swing.JLabel();
        lblThongTin_MaNV = new javax.swing.JLabel();
        lblThongTin_NgayNhap = new javax.swing.JLabel();
        lblThongTin_TongTien = new javax.swing.JLabel();
        btnThongTin_Them = new javax.swing.JButton();
        btnThongTin_Xoa = new javax.swing.JButton();
        tfThongTin_MaPN = new javax.swing.JTextField();
        tfThongTin_MaNV = new javax.swing.JTextField();
        tfThongTin_TongTien = new javax.swing.JTextField();
        calendarThongTin = new com.toedter.calendar.JDateChooser();
        btnThongTin_Sua1 = new javax.swing.JButton();
        btnThongTin_Trong = new javax.swing.JButton();
        cbbThongTin_MaNCC = new javax.swing.JComboBox<>();
        pThongTin_TimKiem = new javax.swing.JPanel();
        lblThongTin_MaKH1 = new javax.swing.JLabel();
        lblThongTin_TongTien1 = new javax.swing.JLabel();
        lblThongTin_MaHD1 = new javax.swing.JLabel();
        lblThongTin_MaNV1 = new javax.swing.JLabel();
        btnTimKiem_TimKiem = new javax.swing.JButton();
        btnTimKiem_HuyTimKiem = new javax.swing.JButton();
        tfTimKiem_MaPN1 = new javax.swing.JTextField();
        tfTimKiem_MaNCC1 = new javax.swing.JTextField();
        tfTimKiem_MaNV1 = new javax.swing.JTextField();
        tfTimKiem_TongTien1 = new javax.swing.JTextField();
        btnTimKiem_Trong1 = new javax.swing.JButton();
        pChiTietSanPhamRoot = new javax.swing.JPanel();
        pChiTietSanPham1 = new javax.swing.JPanel();
        lblChiTiet_SL1 = new javax.swing.JLabel();
        btnChiTiet_Xoa1 = new javax.swing.JButton();
        lblChiTiet_Gia1 = new javax.swing.JLabel();
        btnChiTiet_Sua1 = new javax.swing.JButton();
        tfChiTiet_MaSP1 = new javax.swing.JTextField();
        tfChiTiet_MaHD1 = new javax.swing.JTextField();
        tfChiTiet_SL1 = new javax.swing.JTextField();
        lblChiTiet_MaSP1 = new javax.swing.JLabel();
        tfChiTiet_Gia1 = new javax.swing.JTextField();
        lblChiTiet_MaHD1 = new javax.swing.JLabel();
        btnChiTiet_Them1 = new javax.swing.JButton();
        btnChiTiet_TaoMoi1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblThongTin2 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuTaiKhoan = new javax.swing.JMenu();
        menuTaiKhoan_ThongTin = new javax.swing.JMenuItem();
        menuTaiKhoan_DangXuat = new javax.swing.JMenuItem();
        menuTroVe = new javax.swing.JMenu();
        menuThoat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnLeft.setBackground(Color_pnLeft);
        pnLeft.setPreferredSize(new java.awt.Dimension(584, 70));

        pThongTin.setBackground(colorPanel_Center);
        pThongTin.setPreferredSize(new java.awt.Dimension(340, 580));
        pThongTin.setVerifyInputWhenFocusTarget(false);

        jScrollPane2.setBorder(null);

        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Mã KH", "Mã NV", "Mã KM", "Ngày Bán", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin.setGridColor(new java.awt.Color(255, 51, 51));
        tblThongTin.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongTin);

        pThongTin_ThongTin.setBackground(colorPanel_Center);
        pThongTin_ThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THÔNG TIN PHIẾU NHẬP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        pThongTin_ThongTin.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaPN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaPN.setForeground(colorText);
        lblThongTin_MaPN.setText("Mã phiếu nhập");

        lblThongTin_MaNCC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaNCC.setForeground(colorText);
        lblThongTin_MaNCC.setText("Mã nhà cung cấp");

        lblThongTin_MaNV.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaNV.setForeground(colorText);
        lblThongTin_MaNV.setText("Mã nhân viên");

        lblThongTin_NgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_NgayNhap.setForeground(colorText);
        lblThongTin_NgayNhap.setText("Ngày nhập");

        lblThongTin_TongTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_TongTien.setForeground(colorText);
        lblThongTin_TongTien.setText("Tổng tiền");

        btnThongTin_Them.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Them.setText("Thêm");
        btnThongTin_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_ThemActionPerformed(evt);
            }
        });

        btnThongTin_Xoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Xoa.setText("Xóa");
        btnThongTin_Xoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_XoaMouseClicked(evt);
            }
        });

        tfThongTin_MaPN.setEditable(false);
        tfThongTin_MaPN.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tfThongTin_MaPN.setPreferredSize(new java.awt.Dimension(170, 28));
        tfThongTin_MaPN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfThongTin_MaPNMouseClicked(evt);
            }
        });
        tfThongTin_MaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThongTin_MaPNActionPerformed(evt);
            }
        });

        tfThongTin_MaNV.setEditable(false);
        tfThongTin_MaNV.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tfThongTin_MaNV.setPreferredSize(new java.awt.Dimension(170, 28));

        tfThongTin_TongTien.setEditable(false);
        tfThongTin_TongTien.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tfThongTin_TongTien.setPreferredSize(new java.awt.Dimension(170, 28));

        calendarThongTin.setDate(new java.util.Date());
        calendarThongTin.setDateFormatString("dd / MM / yyyy");
        calendarThongTin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        btnThongTin_Sua1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Sua1.setText("Sửa");
        btnThongTin_Sua1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_Sua1MouseClicked(evt);
            }
        });

        btnThongTin_Trong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Trong.setText("Mới");
        btnThongTin_Trong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_TrongMouseClicked(evt);
            }
        });
        btnThongTin_Trong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_TrongActionPerformed(evt);
            }
        });

        cbbThongTin_MaNCC.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cbbThongTin_MaNCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KH1", "KH2" }));

        javax.swing.GroupLayout pThongTin_ThongTinLayout = new javax.swing.GroupLayout(pThongTin_ThongTin);
        pThongTin_ThongTin.setLayout(pThongTin_ThongTinLayout);
        pThongTin_ThongTinLayout.setHorizontalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblThongTin_NgayNhap)
                                    .addComponent(lblThongTin_MaPN)
                                    .addComponent(lblThongTin_MaNV)
                                    .addComponent(lblThongTin_TongTien))
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pThongTin_ThongTinLayout.createSequentialGroup()
                                .addComponent(lblThongTin_MaNCC)
                                .addGap(18, 18, 18)))
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calendarThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfThongTin_MaPN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addComponent(cbbThongTin_MaNCC, javax.swing.GroupLayout.Alignment.LEADING, 0, 99, Short.MAX_VALUE)
                                .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThongTin_Them)
                            .addComponent(btnThongTin_Sua1))
                        .addGap(18, 18, 18)
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnThongTin_Trong)
                            .addComponent(btnThongTin_Xoa))))
                .addGap(100, 100, 100))
        );
        pThongTin_ThongTinLayout.setVerticalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaPN)
                    .addComponent(tfThongTin_MaPN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbThongTin_MaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_MaNCC, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_MaNV))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendarThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_NgayNhap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin_TongTien)
                    .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongTin_Xoa)
                    .addComponent(btnThongTin_Them))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongTin_Trong)
                    .addComponent(btnThongTin_Sua1))
                .addContainerGap())
        );

        pThongTin_TimKiem.setBackground(colorPanel_Center);
        pThongTin_TimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TÌM KIẾM PHIẾU NHẬP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        pThongTin_TimKiem.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaKH1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaKH1.setForeground(colorText);
        lblThongTin_MaKH1.setText("Mã nhà cung cấp");

        lblThongTin_TongTien1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_TongTien1.setForeground(colorText);
        lblThongTin_TongTien1.setText("Tổng tiền");

        lblThongTin_MaHD1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaHD1.setForeground(colorText);
        lblThongTin_MaHD1.setText("Mã phiếu nhập");

        lblThongTin_MaNV1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblThongTin_MaNV1.setForeground(colorText);
        lblThongTin_MaNV1.setText("Mã nhân viên");

        btnTimKiem_TimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiem_TimKiem.setText("Tìm kiếm");
        btnTimKiem_TimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_TimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_TimKiemActionPerformed(evt);
            }
        });

        btnTimKiem_HuyTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiem_HuyTimKiem.setText("Hủy tìm kiếm");
        btnTimKiem_HuyTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_HuyTimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_HuyTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_HuyTimKiemActionPerformed(evt);
            }
        });

        tfTimKiem_MaPN1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaPN1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_MaNCC1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaNCC1.setPreferredSize(new java.awt.Dimension(170, 28));
        tfTimKiem_MaNCC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimKiem_MaNCC1ActionPerformed(evt);
            }
        });

        tfTimKiem_MaNV1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaNV1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_TongTien1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_TongTien1.setPreferredSize(new java.awt.Dimension(170, 28));

        btnTimKiem_Trong1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTimKiem_Trong1.setText("Trống");
        btnTimKiem_Trong1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_Trong1MouseClicked(evt);
            }
        });
        btnTimKiem_Trong1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_Trong1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pThongTin_TimKiemLayout = new javax.swing.GroupLayout(pThongTin_TimKiem);
        pThongTin_TimKiem.setLayout(pThongTin_TimKiemLayout);
        pThongTin_TimKiemLayout.setHorizontalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnTimKiem_Trong1))
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThongTin_MaKH1)
                            .addComponent(lblThongTin_MaHD1)
                            .addComponent(lblThongTin_MaNV1)
                            .addComponent(lblThongTin_TongTien1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(tfTimKiem_MaNCC1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(tfTimKiem_MaPN1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addComponent(btnTimKiem_TimKiem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem_HuyTimKiem))))
        );
        pThongTin_TimKiemLayout.setVerticalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(tfTimKiem_MaNCC1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                        .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblThongTin_MaHD1)
                            .addComponent(tfTimKiem_MaPN1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblThongTin_MaKH1)
                        .addGap(18, 18, 18)
                        .addComponent(lblThongTin_MaNV1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblThongTin_TongTien1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem_TimKiem)
                    .addComponent(btnTimKiem_HuyTimKiem))
                .addGap(5, 5, 5)
                .addComponent(btnTimKiem_Trong1))
        );

        javax.swing.GroupLayout pThongTinLayout = new javax.swing.GroupLayout(pThongTin);
        pThongTin.setLayout(pThongTinLayout);
        pThongTinLayout.setHorizontalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTinLayout.createSequentialGroup()
                        .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pThongTinLayout.setVerticalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE))
        );

        pChiTietSanPham1.setBackground(colorPanel_Center);
        pChiTietSanPham1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CHI TIẾT PHIẾU NHẬP", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        lblChiTiet_SL1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChiTiet_SL1.setForeground(colorText);
        lblChiTiet_SL1.setText("Số Lượng");

        btnChiTiet_Xoa1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChiTiet_Xoa1.setText("Xóa");
        btnChiTiet_Xoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_Xoa1ActionPerformed(evt);
            }
        });

        lblChiTiet_Gia1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChiTiet_Gia1.setForeground(colorText);
        lblChiTiet_Gia1.setText("Giá Bán");

        btnChiTiet_Sua1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChiTiet_Sua1.setText("Sửa");
        btnChiTiet_Sua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_Sua1ActionPerformed(evt);
            }
        });

        tfChiTiet_MaSP1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_MaSP1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfChiTiet_MaSP1MouseClicked(evt);
            }
        });

        tfChiTiet_MaHD1.setEditable(false);
        tfChiTiet_MaHD1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        tfChiTiet_SL1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_SL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfChiTiet_SL1ActionPerformed(evt);
            }
        });

        lblChiTiet_MaSP1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChiTiet_MaSP1.setForeground(colorText);
        lblChiTiet_MaSP1.setText("Mã Sản Phẩm");

        tfChiTiet_Gia1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        lblChiTiet_MaHD1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblChiTiet_MaHD1.setForeground(colorText);
        lblChiTiet_MaHD1.setText("Mã Phiếu nhập");

        btnChiTiet_Them1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChiTiet_Them1.setText("Thêm");
        btnChiTiet_Them1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_Them1ActionPerformed(evt);
            }
        });

        btnChiTiet_TaoMoi1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChiTiet_TaoMoi1.setText("Tạo mới");
        btnChiTiet_TaoMoi1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_TaoMoi1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChiTietSanPham1Layout = new javax.swing.GroupLayout(pChiTietSanPham1);
        pChiTietSanPham1.setLayout(pChiTietSanPham1Layout);
        pChiTietSanPham1Layout.setHorizontalGroup(
            pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPham1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChiTiet_MaSP1)
                    .addComponent(lblChiTiet_SL1)
                    .addComponent(lblChiTiet_Gia1)
                    .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnChiTiet_Them1)
                        .addComponent(lblChiTiet_MaHD1))
                    .addComponent(btnChiTiet_TaoMoi1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfChiTiet_SL1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfChiTiet_MaSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfChiTiet_Gia1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfChiTiet_MaHD1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pChiTietSanPham1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnChiTiet_Sua1)
                            .addComponent(btnChiTiet_Xoa1))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        pChiTietSanPham1Layout.setVerticalGroup(
            pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPham1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_MaSP1)
                    .addComponent(tfChiTiet_MaSP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_MaHD1)
                    .addComponent(tfChiTiet_MaHD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_SL1)
                    .addComponent(tfChiTiet_SL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_Gia1)
                    .addComponent(tfChiTiet_Gia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChiTiet_Them1)
                    .addComponent(btnChiTiet_Xoa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pChiTietSanPham1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChiTiet_TaoMoi1)
                    .addComponent(btnChiTiet_Sua1))
                .addGap(1, 1, 1))
        );

        tblThongTin2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã HĐ", "Số Lượng", "Giá Bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin2.setGridColor(new java.awt.Color(255, 51, 51));
        tblThongTin2.setSelectionBackground(new java.awt.Color(153, 153, 153));
        tblThongTin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTin2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblThongTin2);

        javax.swing.GroupLayout pChiTietSanPhamRootLayout = new javax.swing.GroupLayout(pChiTietSanPhamRoot);
        pChiTietSanPhamRoot.setLayout(pChiTietSanPhamRootLayout);
        pChiTietSanPhamRootLayout.setHorizontalGroup(
            pChiTietSanPhamRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamRootLayout.createSequentialGroup()
                .addGroup(pChiTietSanPhamRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietSanPhamRootLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(pChiTietSanPham1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pChiTietSanPhamRootLayout.setVerticalGroup(
            pChiTietSanPhamRootLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamRootLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pChiTietSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pChiTietSanPhamRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addComponent(pChiTietSanPhamRoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        menuTaiKhoan.setText("Tài khoản");

        menuTaiKhoan_ThongTin.setText("Thông tin");
        menuTaiKhoan_ThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_ThongTinMouseReleased(evt);
            }
        });
        menuTaiKhoan_ThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTaiKhoan_ThongTinActionPerformed(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_ThongTin);

        menuTaiKhoan_DangXuat.setText("Đăng xuất");
        menuTaiKhoan_DangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_DangXuatMouseReleased(evt);
            }
        });
        menuTaiKhoan_DangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTaiKhoan_DangXuatActionPerformed(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_DangXuat);

        jMenuBar1.add(menuTaiKhoan);

        menuTroVe.setText("Trở về");
        menuTroVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTroVeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTroVe);

        menuThoat.setText("Thoát");
        menuThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuThoatMouseEntered(evt);
            }
        });
        jMenuBar1.add(menuThoat);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuTaiKhoan_ThongTinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinMouseReleased
        // TODO add your handling code here:
        User ui = new User();
        ui.setVisible(true);
    }//GEN-LAST:event_menuTaiKhoan_ThongTinMouseReleased

    private void menuTaiKhoan_ThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuTaiKhoan_ThongTinActionPerformed

    private void menuTaiKhoan_DangXuatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatMouseReleased
        // TODO add your handling code here:
        Login lg;
        try {
            lg = new Login();
            lg.setVisible(true);
            this.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(HangHoa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuTaiKhoan_DangXuatMouseReleased

    private void menuTaiKhoan_DangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuTaiKhoan_DangXuatActionPerformed

    private void menuTroVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTroVeMouseClicked
        // TODO add your handling code here:
        Home home;
        try {
            home = new Home();
            home.setVisible(true);
            setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi");
        }
    }//GEN-LAST:event_menuTroVeMouseClicked

    private void menuThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseClicked
        // TODO add your handling code here:
        Question_YesNO Q = new Question_YesNO("Bạn có muốn thoát không?");
        Q.setVisible(true);
    }//GEN-LAST:event_menuThoatMouseClicked

    private void menuThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_menuThoatMouseEntered

    public void nhapLuongNCC() throws Exception{
        NhaCungCapBUS bus =new NhaCungCapBUS();
        ArrayList<NhaCungCapDTO> arr =bus.getList_NV();
        String[] s = new String[bus.getNumb()];
        int i = 0;
        for (NhaCungCapDTO dto : arr) {
            s[i] = dto.getStrMaNCC();
            i++;
            System.out.println(dto.getStrMaNCC());
        }
        cbbThongTin_MaNCC.setModel(new DefaultComboBoxModel<>(s));
    }
    
    
    
    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin.getSelectedRow();

        tfThongTin_MaPN.setText(tblThongTin.getModel().getValueAt(i, 0).toString());
        cbbThongTin_MaNCC.setSelectedItem(tblThongTin.getModel().getValueAt(i, 1));
        tfThongTin_MaNV.setText(tblThongTin.getModel().getValueAt(i, 2).toString());
        Date date = new Date((String) tblThongTin.getModel().getValueAt(i, 3));
        calendarThongTin.setDate(date);
        tfThongTin_TongTien.setText(tblThongTin.getModel().getValueAt(i, 4).toString());
        // lấy thông tin
        TongTien = Double.parseDouble(tfThongTin_TongTien.getText());

        phieunhap.setStrMaPN(tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap((String) tblThongTin.getModel().getValueAt(i, 3));
        phieunhap.setTongTien(Double.parseDouble(tfThongTin_TongTien.getText()));
        System.out.println(phieunhap.toString());

        // hiển thị bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaPN.getText());


        if (TongTien == 0)
        btnThongTin_Xoa.setEnabled(true);

        if (cachamquangtrong.kiemTraDate(date1,
            (String) tblThongTin.getModel().getValueAt(i, 3))) {
        btnThongTin_Sua1.setEnabled(true);
        btnChiTiet_Sua1.setEnabled(true);
        btnChiTiet_Them1.setEnabled(true);
        btnChiTiet_Xoa1.setEnabled(true);
        btnChiTiet_TaoMoi1.setEnabled(true);
        }

        // không cho chỉnh sửa
        tfThongTin_MaPN.setEditable(false);

        tfChiTiet_MaSP1.setText("");
        tfChiTiet_MaHD1.setText("");
        tfChiTiet_SL1.setText("");
        tfChiTiet_Gia1.setText("");
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void btnThongTin_TrongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_TrongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThongTin_TrongActionPerformed

    private void btnThongTin_TrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_TrongMouseClicked
        // TODO add your handling code here:
        TongTien = 0;

        tfThongTin_MaPN.setText(list_PN.getDefaultMaPN());
        cbbThongTin_MaNCC.setSelectedIndex(0);
        tfThongTin_MaNV.setText(Memory.maNV);
        tfThongTin_TongTien.setText("");

        tfChiTiet_MaSP1.setText("");
        tfChiTiet_SL1.setText("");
        tfChiTiet_Gia1.setText("");
        tfChiTiet_MaHD1.setText(tfThongTin_MaPN.getText());

        String s = LocalDateTime.now().getDayOfMonth() + " " +
        LocalDateTime.now().getYear() + " " +
        LocalDateTime.now().getMonth() ;
        System.out.println(s);

        Date date = new Date(s);
        calendarThongTin.setDate(date);

        tfThongTin_MaPN.requestFocus();

        btnThongTin_Them.setEnabled(true);

        // xóa thông tin bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaPN.getText());
    }//GEN-LAST:event_btnThongTin_TrongMouseClicked

    private void btnThongTin_Sua1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_Sua1MouseClicked
        // TODO add your handling code here:
        int iPos = 0;

        for (int i = 0 ; i < list_PN.getNumb() ; i++) {
            PhieuNhapDTO hd = list_PN.getInfor(i);
            if (hd.getStrMaPN().equals(phieunhap.getStrMaPN()))
            iPos = i;
        }

        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
        System.out.println(s[2] + " " + s[1] + " " +s[5]);
        System.out.println(calendarThongTin.getDate());
        String NgayBan = s[2] + " " + s[1] + " " +s[5];

        phieunhap.setStrMaPN( tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap(NgayBan);
        phieunhap.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));

        try {
            list_PN.sua(phieunhap);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        actionButtondisplay();
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());

        if (!tfThongTin_MaPN.getText().equals("")) {
            tfThongTin_MaPN.setText("");
            tfThongTin_TongTien.setText("");
            cbbThongTin_MaNCC.setSelectedIndex(0);
        }
    }//GEN-LAST:event_btnThongTin_Sua1MouseClicked

    private void tfThongTin_MaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThongTin_MaPNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThongTin_MaPNActionPerformed

    private void tfThongTin_MaPNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfThongTin_MaPNMouseClicked
        // TODO add your handling code here:
        System.out.println("Click here PLae");
    }//GEN-LAST:event_tfThongTin_MaPNMouseClicked
    
    private void actionxoathongtin() {
        PhieuNhapDTO hd = new PhieuNhapDTO();
        hd.setStrMaPN(tfThongTin_MaPN.getText());
        
        try {
            list_PN.xoa(hd);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplay();
        
        tfThongTin_MaPN.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaNCC.setSelectedIndex(0);
        cbbThongTin_MaNCC.setSelectedIndex(0);
    }

    private void btnThongTin_XoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_XoaMouseClicked
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            actionxoathongtin();
        }
    }//GEN-LAST:event_btnThongTin_XoaMouseClicked

    private void btnThongTin_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_ThemActionPerformed
try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
        System.out.println(s[2] + " " + s[1] + " " +s[5]);
        System.out.println(calendarThongTin.getDate());
        String NgayBan = s[2] + " " + s[1] + " " +s[5];
        
        phieunhap.setStrMaPN( tfThongTin_MaPN.getText());
        phieunhap.setStrMaNCC((String) cbbThongTin_MaNCC.getSelectedItem());
        phieunhap.setStrMaNV(tfThongTin_MaNV.getText());
        phieunhap.setStrNgayNhap(NgayBan);
        
        
        if (tfThongTin_TongTien.getText().equals(""))
            tfThongTin_TongTien.setText("0");
        phieunhap.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));
        
        try {
            list_PN.them(phieunhap);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfChiTiet_MaHD1.setText(phieunhap.getStrMaPN());
        
        tfChiTiet_MaSP1.requestFocus();
        tfChiTiet_MaHD1.setText(tfThongTin_MaPN.getText());
        
        tfThongTin_MaPN.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaNCC.setSelectedIndex(0);
        
        actionButtondisplay();
    }//GEN-LAST:event_btnThongTin_ThemActionPerformed

    private void btnTimKiem_Trong1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_Trong1ActionPerformed

    private void btnTimKiem_Trong1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1MouseClicked

        // TODO add your handling code here:try
        try{
            list_PN = new PhieuNhapBUS();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        tfTimKiem_MaPN1.setText("");
        tfTimKiem_MaNCC1.setText("");
        tfTimKiem_MaNV1.setText("");
        tfTimKiem_TongTien1.setText("");
    }//GEN-LAST:event_btnTimKiem_Trong1MouseClicked

    private void tfTimKiem_MaNCC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimKiem_MaNCC1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTimKiem_MaNCC1ActionPerformed

    private void btnTimKiem_HuyTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemActionPerformed

    private void btnTimKiem_HuyTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemMouseClicked
        try {
            list_PN = new PhieuNhapBUS();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        actionButtondisplay();
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemMouseClicked

    private void btnTimKiem_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_TimKiemActionPerformed

    private void btnTimKiem_TimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemMouseClicked
        try {
            // TODO add your handling code here:
            list_PN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!tfTimKiem_MaPN1.getText().equals(""))
        list_PN.setList_TK( list_PN.timKiem_MaPN(tfTimKiem_MaPN1.getText()));
        if (!tfTimKiem_MaNCC1.getText().equals(""))
        list_PN.setList_TK( list_PN.timKiem_MaNCC(tfTimKiem_MaNCC1.getText()) );
        if (!tfTimKiem_MaNV1.getText().equals(""))
        list_PN.setList_TK( list_PN.timKiem_MaNV(tfTimKiem_MaNV1.getText()) );
        if (!tfTimKiem_TongTien1.getText().equals(""))
        list_PN.setList_TK( list_PN.timKiem_TongTien(tfTimKiem_TongTien1.getText()) );
        actionButtondisplay();
        System.out.println("Đang tìm kiếm");
    }//GEN-LAST:event_btnTimKiem_TimKiemMouseClicked

    private void btnChiTiet_TaoMoi1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_TaoMoi1ActionPerformed
        // TODO add your handling code here:
        tfChiTiet_MaSP1.setText("");
        tfChiTiet_MaHD1.setText(phieunhap.getStrMaPN());
        tfChiTiet_Gia1.setText("");
        tfChiTiet_SL1.setText("");
    }//GEN-LAST:event_btnChiTiet_TaoMoi1ActionPerformed
  
    private void btnChiTiet_Them1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_Them1ActionPerformed
        // TODO add your handling code here:
        if(kiemTraHangHoa())
            xulyThemChiTietPN();
        else
            JOptionPane.showMessageDialog(null, "Sai số lượng", "Error", JOptionPane.ERROR_MESSAGE);
             
    }//GEN-LAST:event_btnChiTiet_Them1ActionPerformed
    private void actionxoachitiet() {
        ChiTietPNDTO hd = new ChiTietPNDTO();
        hd.setStrMaSP(tfChiTiet_MaSP1.getText());
        hd.setStrMaPN(tfChiTiet_MaHD1.getText());
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL1.getText()));
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia1.getText()));
        
        tinhTongTien( Integer.parseInt(tfChiTiet_SL1.getText())
                    , Integer.parseInt(tfChiTiet_Gia1.getText())
                    , false);
        
        phieunhap.setTongTien(TongTien);
        
        try {
            list_PN.sua(phieunhap);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            list_ChiTietPN.xoa(hd);
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chinhSuaSoLuong_SP(hd.getStrMaSP(), hd.getiSoLuong(), 0, true);
        
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
        tfChiTiet_Gia1.setText("");
        tfChiTiet_MaSP1.setText("");
        tfChiTiet_MaHD1.setText("");
        tfChiTiet_SL1.setText("");
    }
    private void tfChiTiet_SL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfChiTiet_SL1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfChiTiet_SL1ActionPerformed

    private void tfChiTiet_MaSP1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfChiTiet_MaSP1MouseClicked
        // TODO add your handling code here:
        tfChiTiet_Gia1.setText("");
        tfChiTiet_SL1.setText("");
    }//GEN-LAST:event_tfChiTiet_MaSP1MouseClicked

    private void btnChiTiet_Sua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_Sua1ActionPerformed
        int  i = tblThongTin2.getSelectedRow();

        ChiTietPNDTO hd = new ChiTietPNDTO();

        int iSL_SP_LucDau = Integer.parseInt(tblThongTin2.getModel().getValueAt(i, 2).toString());

        hd.setStrMaSP(tfChiTiet_MaSP1.getText());
        hd.setStrMaPN(tfChiTiet_MaHD1.getText());
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia1.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL1.getText()));

        tinhTongTien(iSL_SP_LucDau
            , Integer.parseInt(tblThongTin2.getModel().getValueAt(i, 3).toString())
            , false
        );

        try {
            list_ChiTietPN.sua(hd);
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        actionButtondisplayChiTiet(phieunhap.getStrMaPN());

        tinhTongTien(Integer.parseInt(tfChiTiet_Gia1.getText())
            , Integer.parseInt(tfChiTiet_SL1.getText())
            , true
        );

        // tính sl sp
        int iCount = iSL_SP_LucDau - hd.getiSoLuong();

        chinhSuaSoLuong_SP( hd.getStrMaSP(), iCount, hd.getiGiaNhap(), true);

        phieunhap.setTongTien(TongTien);

        try {
            list_PN.sua(phieunhap);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }

        tfChiTiet_Gia1.setText("");
        tfChiTiet_MaSP1.setText("");
        tfChiTiet_MaHD1.setText("");
        tfChiTiet_SL1.setText("");
    }//GEN-LAST:event_btnChiTiet_Sua1ActionPerformed

    private void btnChiTiet_Xoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_Xoa1ActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            actionxoachitiet();
        }
    }//GEN-LAST:event_btnChiTiet_Xoa1ActionPerformed

    private void tblThongTin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTin2MouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin2.getSelectedRow();

        tfChiTiet_MaSP1.setText(tblThongTin2.getModel().getValueAt(i, 0).toString());
        tfChiTiet_MaHD1.setText(tblThongTin2.getModel().getValueAt(i, 1).toString());
        tfChiTiet_SL1.setText(tblThongTin2.getModel().getValueAt(i, 2).toString());
        tfChiTiet_Gia1.setText(tblThongTin2.getModel().getValueAt(i, 3).toString());
    }//GEN-LAST:event_tblThongTin2MouseClicked
    
    private double tinhTongTien(int iSoLuong, int iGiaBan, boolean hanhDong) {
        if (hanhDong)
            TongTien += iSoLuong * iGiaBan;
        else
             TongTien -= iSoLuong * iGiaBan;
        return TongTien;
    }
    
    
    private void xulyThemChiTietPN(){
        
        try {
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ChiTietPNDTO hd = new ChiTietPNDTO();
        
        hd.setStrMaSP(tfChiTiet_MaSP1.getText());
        hd.setStrMaPN(tfChiTiet_MaHD1.getText());
        hd.setiGiaNhap(Integer.parseInt(tfChiTiet_Gia1.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL1.getText()));
        
        boolean flag = list_ChiTietPN.kiemTraKhoachinh(hd);
        try {
            if ( !flag ) {
                System.out.println( list_ChiTietPN.them(hd) );
                chinhSuaSoLuong_SP(hd.getStrMaSP(), hd.getiSoLuong(), hd.getiGiaNhap(), false);
                System.out.println("chinh sua san pham hoan tat");
            }
            else 
                JOptionPane.showMessageDialog(null, "Bị trùng mã SP", "Error", JOptionPane.ERROR_MESSAGE);
                
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_ChiTietPN.docDB();
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplayChiTiet(phieunhap.getStrMaPN());
        
        // nếu như thêm vào được
        // ghi dữ liệu
        if ( !flag ) {
            tinhTongTien(Integer.parseInt(tfChiTiet_SL1.getText())
                    , Integer.parseInt(tfChiTiet_Gia1.getText())
                    , true);
       
            phieunhap.setTongTien(TongTien);
            
            try {
                list_PN.sua(phieunhap);
            } catch (Exception ex) {
                Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            actionButtondisplay();
        }
        
        tfChiTiet_MaSP1.setText("");
        tfChiTiet_SL1.setText("");
        tfChiTiet_Gia1.setText("");
        tfChiTiet_MaSP1.requestFocus();
    }
    
    private boolean kiemTraHangHoa() {
        if (Integer.parseInt(tfChiTiet_SL1.getText()) > 0) 
            return true;
        return false;
    }
    
    private boolean kiemtraMaSP() {
        SanPhamDTO sp = new SanPhamDTO();
        sp = list_SanPham.getInfor(tfChiTiet_MaSP1.getText());
        
        if (sp.getStrMaSP().equals("null"))
            return false;
        
        tfChiTiet_SL1.setText(String.valueOf(sp.getiSoLuong()));
        tfChiTiet_Gia1.setText(String.valueOf(sp.getiGia()));
        
        return true;
    }
    /**
     * thêm hoặc bớt số lượng sản phẩm
     * @param strMaSP
     * @param iSoLuong so luong can thay doi
     * @param hanhdong <h2>Tăng số lượng sản phẩm là true</h2>
     */
    private void chinhSuaSoLuong_SP(String strMaSP, int iSoLuong, int GiaNhap, boolean hanhdong) {
        SanPhamDTO sp = new SanPhamDTO();
        
        sp = list_SanPham.getInfor(strMaSP);
        
        sp.setiGia(GiaNhap + 50);
                
        if (!hanhdong) {
            sp.setiSoLuong( sp.getiSoLuong() + iSoLuong );
            System.out.println("tang so luong sp");
        }
        else {
            sp.setiSoLuong( sp.getiSoLuong() - iSoLuong );
            System.out.println("Giam so luong sp");
        }
            
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        
        try {
            System.out.println("hanh dong chinh sua sp: "+ list_SanPham.sua(sp) );
        } catch (Exception ex) {
            Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void actionTFChiTiet() {
        tfChiTiet_MaSP1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                    tfChiTiet_SL1.requestFocus();
                    kiemtraMaSP();
                }
            }
        });
        
        tfChiTiet_SL1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                    
                        btnChiTiet_Them1ActionPerformed(null);
                        tfChiTiet_MaSP1.requestFocus();
                        
                }
            }
        });
    }
    
    
    private void createVectorHeader() {
        if (model.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã PN");
            header.add("Mã NCC");
            header.add("Mã NV");
            header.add("Ngày Nhập");
            header.add("Tổng Tiền");
            
            model = new DefaultTableModel(header, 0){
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };;
        }
    }
    
    private void actionButtondisplay() {
        model = new DefaultTableModel();
        
        createVectorHeader();
        for (int i=0 ; i < list_PN.getNumb() ; i++) {
            PhieuNhapDTO hd = new PhieuNhapDTO();
            
            hd = list_PN.getInfor(i);
            
            createVectorHeader();
            
            Vector row=new Vector();
            row.add(hd.getStrMaPN());
            row.add(hd.getStrMaNCC());
            row.add(hd.getStrMaNV());
            row.add(hd.getStrNgayNhap());
            row.add(hd.getTongTien());
            
            model.addRow(row);
        }
       
        
        tblThongTin.setModel(model);
        
    }
    private void createVectorHeaderChiTiet() {
        if (modelChiTiet.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã Sản Phẩm");
            header.add("Mã Phiếu Nhập");
            header.add("Số Lượng");
            header.add("Giá Nhập");
            modelChiTiet = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
        }
    }
    
    private void actionButtondisplayChiTiet() {
        actionButtondisplayChiTiet("null");
    }
    
    private void actionButtondisplayChiTiet(String strMaHD) {
        modelChiTiet = new DefaultTableModel();
        
        createVectorHeaderChiTiet();
        for (int i=0 ; i < list_ChiTietPN.getNumbChiTietPN() ; i++) {
            ChiTietPNDTO hd = new ChiTietPNDTO();
            
            hd = list_ChiTietPN.getInfor(i);
            
            createVectorHeaderChiTiet();
            
            if ( hd.getStrMaPN().equalsIgnoreCase(strMaHD) || 
                    strMaHD.equals("null")) {
                
                Vector row=new Vector();
                row.add(hd.getStrMaSP());
                row.add(hd.getStrMaPN());
                row.add(hd.getiSoLuong());
                row.add(hd.getiGiaNhap());
                modelChiTiet.addRow(row);
            }
        }
        
        tblThongTin2.setModel(modelChiTiet);
    }

    private JPanel createPanel_LblLeft(String[] strArr_Left) {
        JPanel Panel = new JPanel();
        listLblLeft = new JLabel[10];
        
        Panel.setLayout(new BoxLayout(Panel,BoxLayout.Y_AXIS));
        Panel.setBackground(Color_pnLeft);
        
        for (int i=0 ; i < listLblLeft.length ; i++) {
            listLblLeft[i] = new JLabel(new ImageIcon("./src/QLHH/img/Menu/"+strArr_Left[i]+".png"));
            listLblLeft[i].setName(strArr_Left[i]);
            listLblLeft[i].setOpaque(true);
            listLblLeft[i].addMouseListener(this);
            listLblLeft[i].setBackground(Color_pnLeft);
            
            Panel.add(listLblLeft[i]);
        }
        
        return Panel;
    }
    
    public void setTextColor(String Mau){
        colorText = colorText;
        lblChiTiet_Gia1.setForeground(colorText);
        lblChiTiet_MaHD1.setForeground(colorText);
        lblChiTiet_MaSP1.setForeground(colorText);
        lblChiTiet_MaSP1.setForeground(colorText);
        lblChiTiet_SL1.setForeground(colorText);
        lblThongTin_MaPN.setForeground(colorText);
        lblThongTin_MaHD1.setForeground(colorText);
        lblThongTin_MaNCC.setForeground(colorText);
        lblThongTin_MaKH1.setForeground(colorText);
        lblThongTin_MaNV.setForeground(colorText);
        lblThongTin_MaNV1.setForeground(colorText);
        lblThongTin_NgayNhap.setForeground(colorText);
        lblThongTin_TongTien.setForeground(colorText);
        lblThongTin_TongTien1.setForeground(colorText);
        
        //-----------------------Đổi màu cho Panel
        pnLeft.setBackground( Color_pnLeft );
        pChiTietSanPhamRoot.setBackground( colorPanel_Center );
        pChiTietSanPham1.setBackground( colorPanel_Center );
        pThongTin.setBackground( colorPanel_Center );
        pThongTin_ThongTin.setBackground( colorPanel_Center );
        pThongTin_TimKiem.setBackground( colorPanel_Center );
        
        //---------------------list lbl top
        for (int i=0 ; i < strArr_Left.length ; i++) {
            listLblLeft[i].setBackground( Color_pnLeft );
        }
        
    }   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuNhap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PhieuNhap().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(PhieuNhap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChiTiet_Sua1;
    private javax.swing.JButton btnChiTiet_TaoMoi1;
    private javax.swing.JButton btnChiTiet_Them1;
    private javax.swing.JButton btnChiTiet_Xoa1;
    private javax.swing.JButton btnThongTin_Sua1;
    private javax.swing.JButton btnThongTin_Them;
    private javax.swing.JButton btnThongTin_Trong;
    private javax.swing.JButton btnThongTin_Xoa;
    private javax.swing.JButton btnTimKiem_HuyTimKiem;
    private javax.swing.JButton btnTimKiem_TimKiem;
    private javax.swing.JButton btnTimKiem_Trong1;
    private com.toedter.calendar.JDateChooser calendarThongTin;
    private javax.swing.JComboBox<String> cbbThongTin_MaNCC;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblChiTiet_Gia1;
    private javax.swing.JLabel lblChiTiet_MaHD1;
    private javax.swing.JLabel lblChiTiet_MaSP1;
    private javax.swing.JLabel lblChiTiet_SL1;
    private javax.swing.JLabel lblThongTin_MaHD1;
    private javax.swing.JLabel lblThongTin_MaKH1;
    private javax.swing.JLabel lblThongTin_MaNCC;
    private javax.swing.JLabel lblThongTin_MaNV;
    private javax.swing.JLabel lblThongTin_MaNV1;
    private javax.swing.JLabel lblThongTin_MaPN;
    private javax.swing.JLabel lblThongTin_NgayNhap;
    private javax.swing.JLabel lblThongTin_TongTien;
    private javax.swing.JLabel lblThongTin_TongTien1;
    private javax.swing.JMenu menuTaiKhoan;
    private javax.swing.JMenuItem menuTaiKhoan_DangXuat;
    private javax.swing.JMenuItem menuTaiKhoan_ThongTin;
    private javax.swing.JMenu menuThoat;
    private javax.swing.JMenu menuTroVe;
    private javax.swing.JPanel pChiTietSanPham1;
    private javax.swing.JPanel pChiTietSanPhamRoot;
    private javax.swing.JPanel pThongTin;
    private javax.swing.JPanel pThongTin_ThongTin;
    private javax.swing.JPanel pThongTin_TimKiem;
    private javax.swing.JPanel pnLeft;
    private javax.swing.JTable tblThongTin;
    private javax.swing.JTable tblThongTin2;
    private javax.swing.JTextField tfChiTiet_Gia1;
    private javax.swing.JTextField tfChiTiet_MaHD1;
    private javax.swing.JTextField tfChiTiet_MaSP1;
    private javax.swing.JTextField tfChiTiet_SL1;
    private javax.swing.JTextField tfThongTin_MaNV;
    private javax.swing.JTextField tfThongTin_MaPN;
    private javax.swing.JTextField tfThongTin_TongTien;
    private javax.swing.JTextField tfTimKiem_MaNCC1;
    private javax.swing.JTextField tfTimKiem_MaNV1;
    private javax.swing.JTextField tfTimKiem_MaPN1;
    private javax.swing.JTextField tfTimKiem_TongTien1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Clicked");
    }

    @Override
    public void mousePressed(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Pressed");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" click.png"));
    }

    @Override
    public void mouseReleased(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" hover.png"));
    
        // xử lý nút trở về
        if ( src.getName().equals("back") ) {
            Home home;
            try {
                home = new Home();
                home.setVisible(true);
                setVisible(false);
            } catch (Exception e) {
                System.out.println("Lỗi");
            }
        }
        
        if ( src.getName().equals("nhanvien") ) 
                try {
                    NhanVien dm;
                    dm = new NhanVien();
                    dm.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } 
        
        if ( src.getName().equals("hanghoa") ) 
                try {
                    HangHoa hd = new HangHoa();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("hoadon") ) 
                try {
                    HoaDon hd;
                    hd = new HoaDon();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("thongke") ) 
                try {
                    ThongKe hd;
                    hd = new ThongKe();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("xuatexcel") ) 
                try {
                    Excel hd;
                    hd = new Excel();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }

    @Override
    public void mouseEntered(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" hover.png"));

    }

    @Override
    public void mouseExited(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Exited");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+".png"));
    }

}
