/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package QLHH.GUI;

import QLHH.DTO.SanPhamDTO;
import QLHH.BUS.ChiTietHDBUS;
import QLHH.BUS.HoaDonBUS;
import QLHH.BUS.KhachHangBUS;
import QLHH.BUS.SanPhamBUS;
import QLHH.DTO.ChiTietHDDTO;
import QLHH.DTO.HoaDonDTO;
import QLHH.DTO.KhachHangDTO;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class HoaDon extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form HoaDon
     */
    public HoaDon() throws Exception   {
        
        this.setUndecorated(true);
        init();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(1005, 607);
        this.setTitle("QUẢN LÝ HÀNG HÓA SIÊU THỊ");
        pThongTin_ThongTin.setVisible(true);
        // các hàm xử lý sau khi vào
        
        // hiển thị các dữ liệu table
        actionButtondisplay();
        actionButtondisplayChiTiet();
        
        // cac su kien khac
        actionTFChiTiet();
        
        // hiển thị rdbtn
     
        tfThongTin_MaNV.setText(Memory.maNV);
        
        tblThongTin.setAutoCreateRowSorter(true);
        tblThongTin1.setAutoCreateRowSorter(true);
    }
    
    private CacHamQuanTrong cachamquantrong;
    private Color Color_pnLeft, colorPanel_Center, colorText;
    private JLabel[] listLblLeft;
    private String[] strArr_Left;
    private HoaDonBUS list_HD;
    private ChiTietHDBUS list_ChiTietHD;
    private SanPhamBUS list_SanPham;
    private KhachHangBUS list_KH;
    private DefaultTableModel model, modelChiTiet;
    private double TongTien;
    private HoaDonDTO hoadon;
    private String[] strMonths = {"Jan","Feb","Mar","Apr","May","Jun",
                                  "Jul","Aug","Sep","Oct","Nov","Dec"};

    private String date1 = LocalDateTime.now().getDayOfMonth() + " " +
                LocalDateTime.now().getMonth() + " " +
                LocalDateTime.now().getYear();
    
        
    public void init() throws Exception {
        Color_pnLeft = Memory.colorThemes;
        colorPanel_Center = Memory.colorThemes_2;
        colorText = Memory.colorText;
        
        list_HD = new HoaDonBUS();
        list_ChiTietHD = new ChiTietHDBUS();
        list_SanPham = new SanPhamBUS();
        list_KH = new KhachHangBUS();
        hoadon = new HoaDonDTO();
        cachamquantrong = new CacHamQuanTrong();
        
        
        strArr_Left = new String[10];
        strArr_Left[0] = "hanghoa";
        strArr_Left[1] = "phieunhap";
        strArr_Left[2] = "hoadon";
        strArr_Left[3] = "thongke";
        strArr_Left[4] = "xuatexcel";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnLeft = createPanel_LblLeft(strArr_Left);
        pCenter = new javax.swing.JPanel();
        pThongTin = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThongTin = new javax.swing.JTable();
        pThongTin_ThongTin = new javax.swing.JPanel();
        lblThongTin_MaHD = new javax.swing.JLabel();
        lblThongTin_MaKH = new javax.swing.JLabel();
        lblThongTin_MaNV = new javax.swing.JLabel();
        lblThongTin_NgayBan = new javax.swing.JLabel();
        lblThongTin_TongTien = new javax.swing.JLabel();
        btnThongTin_Them = new javax.swing.JButton();
        btnThongTin_Xoa = new javax.swing.JButton();
        tfThongTin_MaHD = new javax.swing.JTextField();
        tfThongTin_MaNV = new javax.swing.JTextField();
        tfThongTin_TongTien = new javax.swing.JTextField();
        calendarThongTin = new com.toedter.calendar.JDateChooser();
        btnThongTin_Sua1 = new javax.swing.JButton();
        btnThongTin_Trong = new javax.swing.JButton();
        cbbThongTin_MaKH = new javax.swing.JComboBox<>();
        tfThongTin_TenKH = new javax.swing.JTextField();
        pThongTin_TimKiem = new javax.swing.JPanel();
        lblThongTin_MaKH1 = new javax.swing.JLabel();
        lblThongTin_TongTien1 = new javax.swing.JLabel();
        lblThongTin_MaHD1 = new javax.swing.JLabel();
        lblThongTin_MaNV1 = new javax.swing.JLabel();
        btnTimKiem_TimKiem = new javax.swing.JButton();
        btnTimKiem_HuyTimKiem = new javax.swing.JButton();
        tfTimKiem_MaHD1 = new javax.swing.JTextField();
        tfTimKiem_MaKH1 = new javax.swing.JTextField();
        tfTimKiem_MaNV1 = new javax.swing.JTextField();
        tfTimKiem_TongTien1 = new javax.swing.JTextField();
        btnTimKiem_Trong1 = new javax.swing.JButton();
        pChiTiet = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblThongTin1 = new javax.swing.JTable();
        pChiTietSanPham = new javax.swing.JPanel();
        lblChiTiet_SL = new javax.swing.JLabel();
        btnChiTiet_Xoa = new javax.swing.JButton();
        lblChiTiet_Gia = new javax.swing.JLabel();
        btnChiTiet_Sua = new javax.swing.JButton();
        tfChiTiet_MaSP = new javax.swing.JTextField();
        tfChiTiet_MaHD = new javax.swing.JTextField();
        tfChiTiet_SL = new javax.swing.JTextField();
        lblChiTiet_MaSP = new javax.swing.JLabel();
        tfChiTiet_Gia = new javax.swing.JTextField();
        lblChiTiet_MaHD = new javax.swing.JLabel();
        btnChiTiet_Them = new javax.swing.JButton();
        btnChiTiet_TaoMoi = new javax.swing.JButton();
        lblChiTiet_Xuat = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuTaiKhoan = new javax.swing.JMenu();
        menuTaiKhoan_ThongTin = new javax.swing.JMenuItem();
        menuTaiKhoan_DangXuat = new javax.swing.JMenuItem();
        menuTroVe = new javax.swing.JMenu();
        menuThoat = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1005, 601));

        pnLeft.setBackground(Color_pnLeft);
        pnLeft.setPreferredSize(new java.awt.Dimension(584, 70));

        pCenter.setBackground(colorPanel_Center);
        pCenter.setPreferredSize(new java.awt.Dimension(1280, 600));

        pThongTin.setBackground(colorPanel_Center);
        pThongTin.setPreferredSize(new java.awt.Dimension(340, 580));
        pThongTin.setVerifyInputWhenFocusTarget(false);

        tblThongTin.setAutoCreateRowSorter(true);
        tblThongTin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HĐ", "Mã KH", "Mã NV", "Mã KM", "Ngày Bán", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongTin.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTinMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThongTin);

        pThongTin_ThongTin.setBackground(colorPanel_Center);
        pThongTin_ThongTin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "THÔNG TIN HÓA ĐƠN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        pThongTin_ThongTin.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaHD.setForeground(colorText);
        lblThongTin_MaHD.setText("Mã hóa đơn");

        lblThongTin_MaKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaKH.setForeground(colorText);
        lblThongTin_MaKH.setText("Mã khách hàng");

        lblThongTin_MaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaNV.setForeground(colorText);
        lblThongTin_MaNV.setText("Mã nhân viên");

        lblThongTin_NgayBan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_NgayBan.setForeground(colorText);
        lblThongTin_NgayBan.setText("Ngày bán");

        lblThongTin_TongTien.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_TongTien.setForeground(colorText);
        lblThongTin_TongTien.setText("Tổng tiền");

        btnThongTin_Them.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Them.setText("Thêm");
        btnThongTin_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_ThemActionPerformed(evt);
            }
        });

        btnThongTin_Xoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Xoa.setText("Xóa");
        btnThongTin_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_XoaActionPerformed(evt);
            }
        });

        tfThongTin_MaHD.setEditable(false);
        tfThongTin_MaHD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfThongTin_MaHD.setPreferredSize(new java.awt.Dimension(170, 28));
        tfThongTin_MaHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfThongTin_MaHDMouseClicked(evt);
            }
        });
        tfThongTin_MaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfThongTin_MaHDActionPerformed(evt);
            }
        });

        tfThongTin_MaNV.setEditable(false);
        tfThongTin_MaNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfThongTin_MaNV.setPreferredSize(new java.awt.Dimension(170, 28));

        tfThongTin_TongTien.setEditable(false);
        tfThongTin_TongTien.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfThongTin_TongTien.setPreferredSize(new java.awt.Dimension(170, 28));

        calendarThongTin.setDate(new java.util.Date(1590147174000L));
        calendarThongTin.setDateFormatString("dd / MM / yyyy");
        calendarThongTin.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        btnThongTin_Sua1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Sua1.setText("Sửa");
        btnThongTin_Sua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_Sua1ActionPerformed(evt);
            }
        });

        btnThongTin_Trong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnThongTin_Trong.setText("Tạo Mới");
        btnThongTin_Trong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThongTin_TrongMouseClicked(evt);
            }
        });
        btnThongTin_Trong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTin_TrongActionPerformed(evt);
            }
        });

        cbbThongTin_MaKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbbThongTin_MaKH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "KH1", "KH2" }));
        cbbThongTin_MaKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbThongTin_MaKHActionPerformed(evt);
            }
        });

        tfThongTin_TenKH.setEditable(false);
        tfThongTin_TenKH.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tfThongTin_TenKH.setPreferredSize(new java.awt.Dimension(170, 28));

        javax.swing.GroupLayout pThongTin_ThongTinLayout = new javax.swing.GroupLayout(pThongTin_ThongTin);
        pThongTin_ThongTin.setLayout(pThongTin_ThongTinLayout);
        pThongTin_ThongTinLayout.setHorizontalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(btnThongTin_Trong))
                            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblThongTin_TongTien)
                                            .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblThongTin_NgayBan, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblThongTin_MaHD)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfThongTin_TenKH, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(calendarThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                            .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(tfThongTin_MaHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                        .addComponent(lblThongTin_MaKH)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbbThongTin_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                        .addComponent(lblThongTin_MaNV)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pThongTin_ThongTinLayout.createSequentialGroup()
                        .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnThongTin_Sua1))
                            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(btnThongTin_Them)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThongTin_Xoa)))
                        .addGap(52, 52, 52))))
        );
        pThongTin_ThongTinLayout.setVerticalGroup(
            pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_ThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaHD)
                    .addComponent(tfThongTin_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaKH)
                    .addComponent(cbbThongTin_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfThongTin_TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_MaNV)
                    .addComponent(tfThongTin_MaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblThongTin_NgayBan)
                    .addComponent(calendarThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblThongTin_TongTien)
                    .addComponent(tfThongTin_TongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongTin_Them)
                    .addComponent(btnThongTin_Xoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_ThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThongTin_Trong)
                    .addComponent(btnThongTin_Sua1))
                .addContainerGap())
        );

        pThongTin_TimKiem.setBackground(colorPanel_Center);
        pThongTin_TimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TÌM KIẾM HÓA ĐƠN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N
        pThongTin_TimKiem.setPreferredSize(new java.awt.Dimension(405, 280));

        lblThongTin_MaKH1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaKH1.setForeground(colorText);
        lblThongTin_MaKH1.setText("Mã khách hàng");

        lblThongTin_TongTien1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_TongTien1.setForeground(colorText);
        lblThongTin_TongTien1.setText("Tổng tiền");

        lblThongTin_MaHD1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaHD1.setForeground(colorText);
        lblThongTin_MaHD1.setText("Mã hóa đơn");

        lblThongTin_MaNV1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblThongTin_MaNV1.setForeground(colorText);
        lblThongTin_MaNV1.setText("Mã nhân viên");

        btnTimKiem_TimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTimKiem_TimKiem.setText("Tìm kiếm");
        btnTimKiem_TimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_TimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_TimKiemActionPerformed(evt);
            }
        });

        btnTimKiem_HuyTimKiem.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTimKiem_HuyTimKiem.setText("Hủy tìm kiếm");
        btnTimKiem_HuyTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_HuyTimKiemMouseClicked(evt);
            }
        });
        btnTimKiem_HuyTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_HuyTimKiemActionPerformed(evt);
            }
        });

        tfTimKiem_MaHD1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaHD1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_MaKH1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaKH1.setPreferredSize(new java.awt.Dimension(170, 28));
        tfTimKiem_MaKH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimKiem_MaKH1ActionPerformed(evt);
            }
        });

        tfTimKiem_MaNV1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_MaNV1.setPreferredSize(new java.awt.Dimension(170, 28));

        tfTimKiem_TongTien1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfTimKiem_TongTien1.setPreferredSize(new java.awt.Dimension(170, 28));

        btnTimKiem_Trong1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnTimKiem_Trong1.setText("Trống");
        btnTimKiem_Trong1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTimKiem_Trong1MouseClicked(evt);
            }
        });
        btnTimKiem_Trong1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem_Trong1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pThongTin_TimKiemLayout = new javax.swing.GroupLayout(pThongTin_TimKiem);
        pThongTin_TimKiem.setLayout(pThongTin_TimKiemLayout);
        pThongTin_TimKiemLayout.setHorizontalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin_MaKH1)
                    .addComponent(lblThongTin_MaNV1)
                    .addComponent(lblThongTin_MaHD1)
                    .addComponent(lblThongTin_TongTien1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(tfTimKiem_MaKH1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(tfTimKiem_MaHD1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(16, 16, 16))
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiem_Trong1)
                    .addComponent(btnTimKiem_HuyTimKiem)
                    .addComponent(btnTimKiem_TimKiem))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pThongTin_TimKiemLayout.setVerticalGroup(
            pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTin_TimKiemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTimKiem_MaHD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_MaHD1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTimKiem_MaKH1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_MaKH1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfTimKiem_MaNV1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblThongTin_MaNV1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pThongTin_TimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblThongTin_TongTien1)
                    .addComponent(tfTimKiem_TongTien1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem_TimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTimKiem_HuyTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem_Trong1)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout pThongTinLayout = new javax.swing.GroupLayout(pThongTin);
        pThongTin.setLayout(pThongTinLayout);
        pThongTinLayout.setHorizontalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pThongTinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pThongTinLayout.createSequentialGroup()
                        .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pThongTinLayout.setVerticalGroup(
            pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pThongTinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pThongTinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pThongTin_ThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(pThongTin_TimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pChiTiet.setBackground(colorPanel_Center);
        pChiTiet.setPreferredSize(new java.awt.Dimension(880, 580));

        tblThongTin1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Mã HĐ", "Số Lượng", "Giá Bán"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThongTin1.setGridColor(new java.awt.Color(102, 255, 102));
        tblThongTin1.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblThongTin1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThongTin1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblThongTin1);

        pChiTietSanPham.setBackground(colorPanel_Center);
        pChiTietSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CHI TIẾT HÓA ĐƠN", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 204))); // NOI18N

        lblChiTiet_SL.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblChiTiet_SL.setForeground(colorText);
        lblChiTiet_SL.setText("Số Lượng");

        btnChiTiet_Xoa.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChiTiet_Xoa.setText("Xóa");
        btnChiTiet_Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_XoaActionPerformed(evt);
            }
        });

        lblChiTiet_Gia.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblChiTiet_Gia.setForeground(colorText);
        lblChiTiet_Gia.setText("Giá Bán");

        btnChiTiet_Sua.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChiTiet_Sua.setText("Sửa");
        btnChiTiet_Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_SuaActionPerformed(evt);
            }
        });

        tfChiTiet_MaSP.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_MaSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfChiTiet_MaSPMouseClicked(evt);
            }
        });

        tfChiTiet_MaHD.setEditable(false);
        tfChiTiet_MaHD.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        tfChiTiet_SL.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        tfChiTiet_SL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfChiTiet_SLActionPerformed(evt);
            }
        });

        lblChiTiet_MaSP.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblChiTiet_MaSP.setForeground(colorText);
        lblChiTiet_MaSP.setText("Mã Sản Phẩm");

        tfChiTiet_Gia.setEditable(false);
        tfChiTiet_Gia.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        lblChiTiet_MaHD.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblChiTiet_MaHD.setForeground(colorText);
        lblChiTiet_MaHD.setText("Mã Hóa Đơn");

        btnChiTiet_Them.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChiTiet_Them.setText("Thêm");
        btnChiTiet_Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_ThemActionPerformed(evt);
            }
        });

        btnChiTiet_TaoMoi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnChiTiet_TaoMoi.setText("Tạo mới");
        btnChiTiet_TaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTiet_TaoMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pChiTietSanPhamLayout = new javax.swing.GroupLayout(pChiTietSanPham);
        pChiTietSanPham.setLayout(pChiTietSanPhamLayout);
        pChiTietSanPhamLayout.setHorizontalGroup(
            pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChiTiet_MaSP)
                            .addComponent(lblChiTiet_MaHD)
                            .addComponent(lblChiTiet_SL)
                            .addComponent(lblChiTiet_Gia))
                        .addGap(38, 38, 38)
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfChiTiet_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfChiTiet_MaSP)
                                .addComponent(tfChiTiet_Gia)
                                .addComponent(tfChiTiet_SL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                    .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChiTiet_Them)
                            .addComponent(btnChiTiet_Xoa))
                        .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(btnChiTiet_TaoMoi))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pChiTietSanPhamLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnChiTiet_Sua)
                                .addGap(8, 8, 8)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pChiTietSanPhamLayout.setVerticalGroup(
            pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietSanPhamLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_MaSP)
                    .addComponent(tfChiTiet_MaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_MaHD)
                    .addComponent(tfChiTiet_MaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_SL)
                    .addComponent(tfChiTiet_SL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChiTiet_Gia)
                    .addComponent(tfChiTiet_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChiTiet_Them)
                    .addComponent(btnChiTiet_Sua))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pChiTietSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChiTiet_Xoa)
                    .addComponent(btnChiTiet_TaoMoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblChiTiet_Xuat.setBackground(new java.awt.Color(255, 51, 51));
        lblChiTiet_Xuat.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblChiTiet_Xuat.setForeground(colorText);
        lblChiTiet_Xuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblChiTiet_XuatMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pChiTietLayout = new javax.swing.GroupLayout(pChiTiet);
        pChiTiet.setLayout(pChiTietLayout);
        pChiTietLayout.setHorizontalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addGroup(pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pChiTietLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pChiTietSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(322, 322, 322)
                .addComponent(lblChiTiet_Xuat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pChiTietLayout.setVerticalGroup(
            pChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblChiTiet_Xuat)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pChiTietSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout pCenterLayout = new javax.swing.GroupLayout(pCenter);
        pCenter.setLayout(pCenterLayout);
        pCenterLayout.setHorizontalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pCenterLayout.setVerticalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCenterLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addComponent(pChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 559, Short.MAX_VALUE))
                .addContainerGap())
        );

        menuTaiKhoan.setText("Tài khoản");

        menuTaiKhoan_ThongTin.setText("Thông tin");
        menuTaiKhoan_ThongTin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_ThongTinMouseReleased(evt);
            }
        });
        menuTaiKhoan_ThongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTaiKhoan_ThongTinActionPerformed(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_ThongTin);

        menuTaiKhoan_DangXuat.setText("Đăng xuất");
        menuTaiKhoan_DangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                menuTaiKhoan_DangXuatMouseReleased(evt);
            }
        });
        menuTaiKhoan_DangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuTaiKhoan_DangXuatActionPerformed(evt);
            }
        });
        menuTaiKhoan.add(menuTaiKhoan_DangXuat);

        jMenuBar1.add(menuTaiKhoan);

        menuTroVe.setText("Trở về");
        menuTroVe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTroVeMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTroVe);

        menuThoat.setText("Thoát");
        menuThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuThoatMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuThoatMouseEntered(evt);
            }
        });
        jMenuBar1.add(menuThoat);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(793, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(187, Short.MAX_VALUE)
                    .addComponent(pCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnLeft, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pCenter, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuTaiKhoan_ThongTinMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinMouseReleased
        // TODO add your handling code here:
        User ui = new User();
        ui.setVisible(true);
    }//GEN-LAST:event_menuTaiKhoan_ThongTinMouseReleased

    private void menuTaiKhoan_ThongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTaiKhoan_ThongTinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuTaiKhoan_ThongTinActionPerformed

    private void menuTaiKhoan_DangXuatMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatMouseReleased
        // TODO add your handling code here:
        Login lg;
        try {
            lg = new Login();
            lg.setVisible(true);
            this.setVisible(false);
        } catch (Exception ex) {
            Logger.getLogger(HangHoa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_menuTaiKhoan_DangXuatMouseReleased

    private void menuTaiKhoan_DangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuTaiKhoan_DangXuatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuTaiKhoan_DangXuatActionPerformed

    private void menuTroVeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTroVeMouseClicked
        // TODO add your handling code here:
        Home home;
        try {
            home = new Home();
            home.setVisible(true);
            setVisible(false);
        } catch (Exception e) {
            System.out.println("Lỗi");
        }
    }//GEN-LAST:event_menuTroVeMouseClicked

    private void menuThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseClicked
        // TODO add your handling code here:
        Question_YesNO Q = new Question_YesNO("Bạn có muốn thoát không?");
        Q.setVisible(true);
    }//GEN-LAST:event_menuThoatMouseClicked

    private void menuThoatMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuThoatMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_menuThoatMouseEntered

    private void tblThongTinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTinMouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin.getSelectedRow();

        tfThongTin_MaHD.setText(tblThongTin.getModel().getValueAt(i, 0).toString());
        cbbThongTin_MaKH.setSelectedItem(tblThongTin.getModel().getValueAt(i, 1));
        tfThongTin_MaNV.setText(tblThongTin.getModel().getValueAt(i, 2).toString());
        Date date = new Date((String) tblThongTin.getModel().getValueAt(i, 3));
        calendarThongTin.setDate(date);
        tfThongTin_TongTien.setText(tblThongTin.getModel().getValueAt(i, 4).toString());
        // lấy thông tin
        TongTien = Double.parseDouble(tfThongTin_TongTien.getText());

        // hiển thị tên nv và kh
        HoaDonDTO hd = new HoaDonDTO();
        hd = list_HD.getInfor(tfThongTin_MaHD.getText());
        KhachHangDTO kh = list_KH.getInfor(tblThongTin.getModel().getValueAt(i, 1).toString());
        tfThongTin_TenKH.setText(kh.getStrHoTen()+ " " );

        //        HoaDonDTO hd = new HoaDonDTO();
        hoadon.setStrMaHD( tfThongTin_MaHD.getText());
        hoadon.setStrMaKH((String) cbbThongTin_MaKH.getSelectedItem());
        hoadon.setStrMaNV(tfThongTin_MaNV.getText());
        hoadon.setStrNgayBan((String) tblThongTin.getModel().getValueAt(i, 3));
        hoadon.setTongTien(Double.parseDouble(tfThongTin_TongTien.getText()));
        System.out.println(hoadon.toString());

        // hiển thị bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaHD.getText());


        if (TongTien == 0) {
            btnThongTin_Xoa.setEnabled(true);
        }

        System.out.println(date1 +" ------ "
            + tblThongTin.getModel().getValueAt(i, 3).toString() );
        if ( cachamquantrong.kiemTraDate(date1,
            tblThongTin.getModel().getValueAt(i, 3).toString())) {
        btnThongTin_Sua1.setEnabled(true);
        btnChiTiet_Them.setEnabled(true);
        btnChiTiet_Sua.setEnabled(true);
        btnChiTiet_Xoa.setEnabled(true);
        btnChiTiet_TaoMoi.setEnabled(true);
        }

        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
    }//GEN-LAST:event_tblThongTinMouseClicked

    private void btnThongTin_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_ThemActionPerformed
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        String date = LocalDateTime.now().getDayOfMonth() + " " +
        strMonths[LocalDateTime.now().getMonthValue()-1] + " " +
        LocalDateTime.now().getYear();

        System.out.println(date);
     
        actionThemHoaDon();

    }//GEN-LAST:event_btnThongTin_ThemActionPerformed

    private void btnThongTin_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_XoaActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            actionxoathongtin();
        }

    }//GEN-LAST:event_btnThongTin_XoaActionPerformed

    private void tfThongTin_MaHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfThongTin_MaHDMouseClicked
        // TODO add your handling code here:
        System.out.println("Click here PLae");
    }//GEN-LAST:event_tfThongTin_MaHDMouseClicked

    private void tfThongTin_MaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfThongTin_MaHDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfThongTin_MaHDActionPerformed

    private void btnThongTin_Sua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_Sua1ActionPerformed
        // TODO add your handling code here:
        
        String date = LocalDateTime.now().getDayOfMonth() + " " +
        strMonths[LocalDateTime.now().getMonthValue()-1] + " " +
        LocalDateTime.now().getYear();

        System.out.println(date);
       
            actionSuaHoaDon();
        

    }//GEN-LAST:event_btnThongTin_Sua1ActionPerformed

    private void btnThongTin_TrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongTin_TrongMouseClicked
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        btnThongTin_Sua1.setEnabled(true);
        btnThongTin_Xoa.setEnabled(true);
        TongTien = 0;

        tfThongTin_MaHD.setText(list_HD.getDefaultMaHD());
        cbbThongTin_MaKH.setSelectedIndex(0);
        tfThongTin_MaNV.setText(Memory.maNV);
        tfThongTin_TongTien.setText("");

        tfChiTiet_MaSP.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
        tfThongTin_TenKH.setText("");
        tfChiTiet_MaHD.setText(tfThongTin_MaHD.getText());

        String s = LocalDateTime.now().getDayOfMonth() + " " +
        LocalDateTime.now().getYear() + " " +
        LocalDateTime.now().getMonth() ;
        System.out.println(s);

        Date date = new Date(s);
        calendarThongTin.setDate(date);

        tfThongTin_MaHD.requestFocus();

        btnThongTin_Them.setEnabled(true);

        // xóa thông tin bên chi tiết
        actionButtondisplayChiTiet(tfThongTin_MaHD.getText());
    }//GEN-LAST:event_btnThongTin_TrongMouseClicked

    private void btnThongTin_TrongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTin_TrongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThongTin_TrongActionPerformed

    private void cbbThongTin_MaKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbThongTin_MaKHActionPerformed
        // TODO add your handling code here:
        System.out.println(cbbThongTin_MaKH.getSelectedItem().toString());
        KhachHangDTO kh = list_KH.getInfor(cbbThongTin_MaKH.getSelectedItem().toString());
        tfThongTin_TenKH.setText(kh.getStrHoTen()+ " " );
    }//GEN-LAST:event_cbbThongTin_MaKHActionPerformed

    private void btnTimKiem_TimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemMouseClicked
       

    }//GEN-LAST:event_btnTimKiem_TimKiemMouseClicked

    private void btnTimKiem_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_TimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_TimKiemActionPerformed

    private void btnTimKiem_HuyTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemMouseClicked
        try {
            list_HD = new HoaDonBUS();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        actionButtondisplay();
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemMouseClicked

    private void btnTimKiem_HuyTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_HuyTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_HuyTimKiemActionPerformed

    private void tfTimKiem_MaKH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimKiem_MaKH1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTimKiem_MaKH1ActionPerformed

    private void btnTimKiem_Trong1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1MouseClicked

        // TODO add your handling code here:try
        try{
            list_HD = new HoaDonBUS();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        tfTimKiem_MaHD1.setText("");
        tfTimKiem_MaKH1.setText("");
        tfTimKiem_MaNV1.setText("");
        tfTimKiem_TongTien1.setText("");
    }//GEN-LAST:event_btnTimKiem_Trong1MouseClicked

    private void btnTimKiem_Trong1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem_Trong1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTimKiem_Trong1ActionPerformed

    private void tblThongTin1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThongTin1MouseClicked
        // TODO add your handling code here:
        int  i=tblThongTin1.getSelectedRow();

        tfChiTiet_MaSP.setText(tblThongTin1.getModel().getValueAt(i, 0).toString());
        tfChiTiet_MaHD.setText(tblThongTin1.getModel().getValueAt(i, 1).toString());
        tfChiTiet_SL.setText(tblThongTin1.getModel().getValueAt(i, 2).toString());
        tfChiTiet_Gia.setText(tblThongTin1.getModel().getValueAt(i, 3).toString());
    }//GEN-LAST:event_tblThongTin1MouseClicked

    private void btnChiTiet_XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_XoaActionPerformed
        // TODO add your handling code here:
        int reply = JOptionPane.showConfirmDialog(null, "Bạn muốn xóa không?", "xóa", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            actionxoachitiet();
        }

    }//GEN-LAST:event_btnChiTiet_XoaActionPerformed

    private void btnChiTiet_SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_SuaActionPerformed
        int  i = tblThongTin1.getSelectedRow();

        ChiTietHDDTO hd = new ChiTietHDDTO();

        int iSL_SP_LucDau = Integer.parseInt(tblThongTin1.getModel().getValueAt(i, 2).toString());

        hd.setStrMaSP(tfChiTiet_MaSP.getText());
        hd.setStrMaHD(tfChiTiet_MaHD.getText());
        hd.setiGiaBan(Integer.parseInt(tfChiTiet_Gia.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));

        
        tinhTongTien(iSL_SP_LucDau
            , Integer.parseInt(tblThongTin1.getModel().getValueAt(i, 3).toString())
             , false
        );

        try {
            list_ChiTietHD.sua(hd);
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        actionButtondisplayChiTiet(hoadon.getStrMaHD());

        tinhTongTien(Integer.parseInt(tfChiTiet_Gia.getText())
            , Integer.parseInt(tfChiTiet_SL.getText())
            , true
        );

        // tính sl sp
        int iCount = iSL_SP_LucDau - hd.getiSoLuong();

        chinhSuaSoLuong_SP( hd.getStrMaSP(), iCount, true);

        hoadon.setTongTien(TongTien);

        try {
            list_HD.sua(hoadon);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
    }//GEN-LAST:event_btnChiTiet_SuaActionPerformed

    private void tfChiTiet_MaSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfChiTiet_MaSPMouseClicked
        // TODO add your handling code here:
        tfChiTiet_Gia.setText("");
        tfChiTiet_SL.setText("");
    }//GEN-LAST:event_tfChiTiet_MaSPMouseClicked

    private void tfChiTiet_SLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfChiTiet_SLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfChiTiet_SLActionPerformed

    private void btnChiTiet_ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_ThemActionPerformed
        // TODO add your handling code here:
        if (cachamquantrong.kiemTraDuLieuSo(tfChiTiet_SL.getText()))
        if(kiemTraHangHoa())
        xulyThemChiTietHD();
        else
        JOptionPane.showMessageDialog(null, "Sai số lượng", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_btnChiTiet_ThemActionPerformed

    private void btnChiTiet_TaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTiet_TaoMoiActionPerformed
        // TODO add your handling code here:
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText(hoadon.getStrMaHD());
        tfChiTiet_Gia.setText("");
        tfChiTiet_SL.setText("");

        tfChiTiet_MaSP.setEditable(true);
        tfChiTiet_SL.setEditable(true);
    }//GEN-LAST:event_btnChiTiet_TaoMoiActionPerformed

    private void lblChiTiet_XuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblChiTiet_XuatMouseClicked
        // TODO add your handling code here:
        

    }//GEN-LAST:event_lblChiTiet_XuatMouseClicked
    
    int x_Mouse, y_Mouse;
    
    private void formMousePressed(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
         x_Mouse = evt.getX();
         y_Mouse = evt.getY();
    }                                 

    private void formMouseDragged(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        setLocation(x - x_Mouse, y - y_Mouse);
    }           
    
    public void actionThemHoaDon() {
//        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
//        System.out.println(s[2] + " " + s[1] + " " +s[5]);
//        System.out.println(calendarThongTin.getDate());
//        String NgayBan = s[2] + " " + s[1] + " " +s[5];
        
        hoadon.setStrMaHD( tfThongTin_MaHD.getText());
        hoadon.setStrMaKH((String) cbbThongTin_MaKH.getSelectedItem());
        hoadon.setStrMaNV(tfThongTin_MaNV.getText());
        hoadon.setStrNgayBan(date1);
        
        if (tfThongTin_TongTien.getText().equals(""))
            tfThongTin_TongTien.setText("0");
        hoadon.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));
        
        try {
            list_HD.them(hoadon);
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tfChiTiet_MaHD.setText(hoadon.getStrMaHD());
        
        tfChiTiet_MaSP.requestFocus();
        tfChiTiet_MaHD.setText(tfThongTin_MaHD.getText());
        
        tfThongTin_MaHD.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaKH.setSelectedIndex(0);
        tfThongTin_TenKH.setText("");
        
        actionButtondisplay();
    }
    
    private void actionxoathongtin() {
        HoaDonDTO hd = new HoaDonDTO();
        hd.setStrMaHD( tfThongTin_MaHD.getText());
        
        try {
            list_HD.xoa(hd);
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_HD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplay();
        
        
        tfThongTin_MaHD.setText("");
        tfThongTin_TongTien.setText("");
        cbbThongTin_MaKH.setSelectedIndex(0);
    }
    
    private double tinhTongTien(int iSoLuong, int iGiaBan, boolean hanhDong) {
        if (hanhDong)
            TongTien += iSoLuong * iGiaBan;
        else
             TongTien -= iSoLuong * iGiaBan;
        return TongTien;
    }
    
    private void xulyThemChiTietHD(){
        
        try {
            list_ChiTietHD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ChiTietHDDTO hd = new ChiTietHDDTO();
        
        hd.setStrMaSP(tfChiTiet_MaSP.getText());
        hd.setStrMaHD(tfChiTiet_MaHD.getText());
        hd.setiGiaBan(Integer.parseInt(tfChiTiet_Gia.getText()));
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));
        
        boolean flag = list_ChiTietHD.kiemTraKhoachinh(hd);
        try {
            if ( !flag ) {
                System.out.println( list_ChiTietHD.them(hd) );
                chinhSuaSoLuong_SP(hd.getStrMaSP(), hd.getiSoLuong(), false);
                System.out.println("chinh sua san pham hoan tat");
            }
            else 
                JOptionPane.showMessageDialog(null, "Bị trùng mã SP", "Error", JOptionPane.ERROR_MESSAGE);
                
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            list_ChiTietHD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplayChiTiet(hoadon.getStrMaHD());
        
        // nếu như thêm vào được
        // ghi dữ liệu
        if ( !flag ) {
            
            tinhTongTien(Integer.parseInt(tfChiTiet_SL.getText())
                    , Integer.parseInt(tfChiTiet_Gia.getText())
                    ,  true);
       
            hoadon.setTongTien(TongTien);
            
            try {
                list_HD.sua(hoadon);
            } catch (Exception ex) {
                Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            actionButtondisplay();
        }
        
        tfChiTiet_MaSP.setText("");
        tfChiTiet_SL.setText("");
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.requestFocus();
    }
    
    private boolean kiemTraHangHoa() {
        int iSoLuong = list_SanPham.getSoLuongCuaSanPham(tfChiTiet_MaSP.getText());
        
        if (iSoLuong >= Integer.parseInt(tfChiTiet_SL.getText()) 
                && Integer.parseInt(tfChiTiet_SL.getText()) > 0) 
            return true;
        return false;
    }
    
    private boolean kiemtraMaSP() {
        SanPhamDTO sp = new SanPhamDTO();
        sp = list_SanPham.getInfor(tfChiTiet_MaSP.getText());
        
        if (sp.getStrMaSP().equals("null"))
            return false;
        
        tfChiTiet_SL.setText(String.valueOf(sp.getiSoLuong()));
        tfChiTiet_Gia.setText(String.valueOf(sp.getiGia()));
        
        return true;
    }
    
    private void chinhSuaSoLuong_SP(String strMaSP, int iSoLuong, boolean hanhdong) {
        SanPhamDTO sp = new SanPhamDTO();
        
        sp = list_SanPham.getInfor(strMaSP);
        
        if (hanhdong) {
            sp.setiSoLuong( sp.getiSoLuong() + iSoLuong );
            System.out.println("tang so luong sp");
        }
        else {
            sp.setiSoLuong( sp.getiSoLuong() - iSoLuong );
            System.out.println("Giam so luong sp");
        }
            
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        System.out.println("aaaaaaaaaaaaaaaaa"+sp.getiSoLuong());
        
        try {
            System.out.println("hanh dong chinh sua sp: "+ list_SanPham.sua(sp) );
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void actionTFChiTiet() {
        tfChiTiet_MaSP.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                   if (!kiemtraMaSP()) {
                        JOptionPane.showMessageDialog(null, "SP không tồn tại", "Error", JOptionPane.ERROR_MESSAGE);
                        tfChiTiet_MaSP.requestFocus();
                    }
                    else 
                        tfChiTiet_SL.requestFocus();
                }
            }
        });
        
        tfChiTiet_SL.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent key){
                if ( key.getKeyCode() == KeyEvent.VK_ENTER ) {
                    btnChiTiet_ThemActionPerformed(null);
                    tfChiTiet_MaSP.requestFocus();
                }
            }
        });
    }
    
    private void actionxoachitiet() {
        
        ChiTietHDDTO hd = new ChiTietHDDTO();
        hd.setStrMaSP(tfChiTiet_MaSP.getText());
        hd.setStrMaHD(tfChiTiet_MaHD.getText());
        hd.setiSoLuong(Integer.parseInt(tfChiTiet_SL.getText()));
        hd.setiGiaBan(Integer.parseInt(tfChiTiet_Gia.getText()));
        
       
        tinhTongTien( Integer.parseInt(tfChiTiet_SL.getText())
                    , Integer.parseInt(tfChiTiet_Gia.getText())
                    , false);
        
        hoadon.setTongTien(TongTien);
        
        try {
            list_HD.sua(hoadon);
            actionButtondisplay();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            list_ChiTietHD.xoa(hd);
            list_ChiTietHD.docDB();
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        chinhSuaSoLuong_SP(hd.getStrMaSP(), hd.getiSoLuong(), true);
        
        actionButtondisplayChiTiet(hoadon.getStrMaHD());
        
        tfChiTiet_Gia.setText("");
        tfChiTiet_MaSP.setText("");
        tfChiTiet_MaHD.setText("");
        tfChiTiet_SL.setText("");
    }
    
    private void actionSuaHoaDon() {
        int iPos = 0;
        
        for (int i = 0 ; i < list_HD.getNumbHoaDon() ; i++) {
            HoaDonDTO hd = list_HD.getInfor(i);
            if (hd.getStrMaHD().equals(hoadon.getStrMaHD()))
                iPos = i;
        }
        
        
//        String[] s = String.valueOf(calendarThongTin.getDate()).split("\\ ");
//        System.out.println(s[2] + " " + s[1] + " " +s[5]);
//        System.out.println(calendarThongTin.getDate());
//        String NgayBan = s[2] + " " + s[1] + " " +s[5];
        
        hoadon.setStrMaHD( tfThongTin_MaHD.getText());
        hoadon.setStrMaKH((String) cbbThongTin_MaKH.getSelectedItem());
        hoadon.setStrMaNV(tfThongTin_MaNV.getText());
        hoadon.setStrNgayBan(date1);
        hoadon.setTongTien( Double.parseDouble(tfThongTin_TongTien.getText()));
        
        try {
            list_HD.sua(hoadon);
        } catch (Exception ex) {
            Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        actionButtondisplay();
        actionButtondisplayChiTiet(hoadon.getStrMaHD());
        
      
        
        if (!tfThongTin_MaHD.getText().equals("")) {
            tfThongTin_MaHD.setText("");
            tfThongTin_TongTien.setText("");
            cbbThongTin_MaKH.setSelectedIndex(0);
        }
    }
    
    
    
    private void createVectorHeader() {
        if (model.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã HĐ");
            header.add("Mã KH");
            header.add("Mã NV");
            header.add("Ngày Bán");
            header.add("Tổng Tiền");
            
            model = new DefaultTableModel(header, 0){
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
        }
    }
    
    private void actionButtondisplay() {
        model = new DefaultTableModel();
        
        createVectorHeader();
        for (int i=0 ; i < list_HD.getNumbHoaDon() ; i++) {
            HoaDonDTO hd = new HoaDonDTO();
            
            hd = list_HD.getInfor(i);
            
            createVectorHeader();
            
            Vector row=new Vector();
            row.add(hd.getStrMaHD());
            row.add(hd.getStrMaKH());
            row.add(hd.getStrMaNV());
            row.add(hd.getStrNgayBan());
            row.add(hd.getTongTien());
            
            model.addRow(row);
        }
        
        tblThongTin.setModel(model);
        tblThongTin.getColumnModel().getColumn(1).setPreferredWidth(50);
        tblThongTin.getColumnModel().getColumn(3).setPreferredWidth(50);
    }
    private void createVectorHeaderChiTiet() {
        if (modelChiTiet.getRowCount()==0) {
            Vector<String> header = new Vector();
            header.add("Mã Sản Phẩm");
            header.add("Mã Hóa Đơn");
            header.add("Số Lượng");
            header.add("Giá Bán");
            modelChiTiet = new DefaultTableModel(header, 0) {
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return false;
                }
            };
        }
    }
    
    private void actionButtondisplayChiTiet() {
        actionButtondisplayChiTiet("null");
    }
    
    private void actionButtondisplayChiTiet(String strMaHD) {
        modelChiTiet = new DefaultTableModel();
        
        createVectorHeaderChiTiet();
        for (int i=0 ; i < list_ChiTietHD.getNumbChiTietHD() ; i++) {
            ChiTietHDDTO hd = new ChiTietHDDTO();
            
            hd = list_ChiTietHD.getInfor(i);
            
            createVectorHeaderChiTiet();
            
            if ( hd.getStrMaHD().equalsIgnoreCase(strMaHD) || 
                    strMaHD.equals("null")) {
                
                Vector row=new Vector();
                row.add(hd.getStrMaSP());
                row.add(hd.getStrMaHD());
                row.add(hd.getiSoLuong());
                row.add(hd.getiGiaBan());
                modelChiTiet.addRow(row);
            }
        }
        
        tblThongTin1.setModel(modelChiTiet);
    }
    
    private JPanel createPanel_LblLeft(String[] strArr_Left) {
        JPanel Panel = new JPanel();
        listLblLeft = new JLabel[10];
        
        Panel.setLayout(new BoxLayout(Panel,BoxLayout.Y_AXIS));
        Panel.setBackground(Color_pnLeft);
        
        for (int i=0 ; i < listLblLeft.length ; i++) {
            listLblLeft[i] = new JLabel(new ImageIcon("./src/QLHH/img/Menu/"+strArr_Left[i]+".png"));
            listLblLeft[i].setName(strArr_Left[i]);
            listLblLeft[i].setOpaque(true);
            listLblLeft[i].addMouseListener(this);
            listLblLeft[i].setBackground(Color_pnLeft);
            
            Panel.add(listLblLeft[i]);
        }
        
        return Panel;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new HoaDon().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(HoaDon.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChiTiet_Sua;
    private javax.swing.JButton btnChiTiet_TaoMoi;
    private javax.swing.JButton btnChiTiet_Them;
    private javax.swing.JButton btnChiTiet_Xoa;
    private javax.swing.JButton btnThongTin_Sua1;
    private javax.swing.JButton btnThongTin_Them;
    private javax.swing.JButton btnThongTin_Trong;
    private javax.swing.JButton btnThongTin_Xoa;
    private javax.swing.JButton btnTimKiem_HuyTimKiem;
    private javax.swing.JButton btnTimKiem_TimKiem;
    private javax.swing.JButton btnTimKiem_Trong1;
    private com.toedter.calendar.JDateChooser calendarThongTin;
    private javax.swing.JComboBox<String> cbbThongTin_MaKH;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblChiTiet_Gia;
    private javax.swing.JLabel lblChiTiet_MaHD;
    private javax.swing.JLabel lblChiTiet_MaSP;
    private javax.swing.JLabel lblChiTiet_SL;
    private javax.swing.JLabel lblChiTiet_Xuat;
    private javax.swing.JLabel lblThongTin_MaHD;
    private javax.swing.JLabel lblThongTin_MaHD1;
    private javax.swing.JLabel lblThongTin_MaKH;
    private javax.swing.JLabel lblThongTin_MaKH1;
    private javax.swing.JLabel lblThongTin_MaNV;
    private javax.swing.JLabel lblThongTin_MaNV1;
    private javax.swing.JLabel lblThongTin_NgayBan;
    private javax.swing.JLabel lblThongTin_TongTien;
    private javax.swing.JLabel lblThongTin_TongTien1;
    private javax.swing.JMenu menuTaiKhoan;
    private javax.swing.JMenuItem menuTaiKhoan_DangXuat;
    private javax.swing.JMenuItem menuTaiKhoan_ThongTin;
    private javax.swing.JMenu menuThoat;
    private javax.swing.JMenu menuTroVe;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pChiTiet;
    private javax.swing.JPanel pChiTietSanPham;
    private javax.swing.JPanel pThongTin;
    private javax.swing.JPanel pThongTin_ThongTin;
    private javax.swing.JPanel pThongTin_TimKiem;
    private javax.swing.JPanel pnLeft;
    private javax.swing.JTable tblThongTin;
    private javax.swing.JTable tblThongTin1;
    private javax.swing.JTextField tfChiTiet_Gia;
    private javax.swing.JTextField tfChiTiet_MaHD;
    private javax.swing.JTextField tfChiTiet_MaSP;
    private javax.swing.JTextField tfChiTiet_SL;
    private javax.swing.JTextField tfThongTin_MaHD;
    private javax.swing.JTextField tfThongTin_MaNV;
    private javax.swing.JTextField tfThongTin_TenKH;
    private javax.swing.JTextField tfThongTin_TongTien;
    private javax.swing.JTextField tfTimKiem_MaHD1;
    private javax.swing.JTextField tfTimKiem_MaKH1;
    private javax.swing.JTextField tfTimKiem_MaNV1;
    private javax.swing.JTextField tfTimKiem_TongTien1;
    // End of variables declaration//GEN-END:variables

   @Override
    public void mouseClicked(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Clicked");
    }

    @Override
    public void mousePressed(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Pressed");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" click.png"));
    }

    @Override
    public void mouseReleased(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" hover.png"));
    
        // xử lý nút trở về
        if ( src.getName().equals("back") ) {
            Home home;
            try {
                home = new Home();
                home.setVisible(true);
                setVisible(false);
            } catch (Exception e) {
                System.out.println("Lỗi");
            }
        }
        
        if ( src.getName().equals("nhanvien") ) 
                try {
                    NhanVien dm;
                    dm = new NhanVien();
                    dm.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                } 
        
        if ( src.getName().equals("phieunhap") ) 
                try {
                    PhieuNhap hd = new PhieuNhap();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("hanghoa") ) 
                try {
                    HangHoa hd;
                    hd = new HangHoa();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("thongke") ) 
                try {
                    ThongKe hd;
                    hd = new ThongKe();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        if ( src.getName().equals("xuatexcel") ) 
                try {
                    Excel hd;
                    hd = new Excel();
                    hd.setVisible(true);
                    setVisible(false);
                } catch (Exception ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
        
    }

    @Override
    public void mouseEntered(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Entered");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+" hover.png"));

    }

    @Override
    public void mouseExited(MouseEvent me) {
        JLabel src = (JLabel) me.getSource();
        System.out.println(src.getName() + "is Exited");
        src.setIcon(new ImageIcon("./src/QLHH/img/Menu/"+src.getName()+".png"));
    }

}
